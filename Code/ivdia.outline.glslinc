#include "UnityCG.cginc"
#include "UnityLightingCommon.cginc"

#pragma vertex vert
#pragma fragment frag

sampler2D _MainTex;
float4 _MainTex_ST;
float4 _OutlineColor;
float _OutlineThickness;

struct appdata
{
    float4 vertex    : POSITION;
    float3 normal    : NORMAL;
    float3 tangent   : TANGENT;
    float3 color     : COLOR;
    float2 uv        : TEXCOORD0;
    float2 rnormal   : TEXCOORD1;
};

struct v2f
{
    float2 uv      : TEXCOORD0;
    float4 vertex  : SV_POSITION;
};

v2f vert(appdata v)
{
    float    thickness = _OutlineThickness * (v.color.r * 2.00);
    float3   bitangent = cross(v.normal, v.tangent);
    float3x3 tbn       = float3x3(v.tangent, bitangent, v.normal);
    float    z         = sqrt(1.00 - v.rnormal.x * v.rnormal.x - v.rnormal.y * v.rnormal.y);
    float3   rnormal   = mul(float3(v.rnormal.x, v.rnormal.y, z), tbn);

    v2f o;
    
    o.vertex  = UnityObjectToClipPos(v.vertex + rnormal * thickness);
    o.uv      = v.uv * _MainTex_ST.xy;

    return o;
}

fixed4 frag(v2f i) : SV_Target
{
    float3 directLight  = _LightColor0.rgb;
    float3 ambientLight = ShadeSH9(float4(0.00, 0.00, 0.00, 1.00));
    float3 light        = directLight + ambientLight;

    fixed4 tex = tex2D(_MainTex, i.uv);

    tex.rgb *= _OutlineColor;
    tex.rgb *= light;

    return tex;
}